openapi: 3.0.0
info:
  description: EVO ZWAGGAH
  version: 3.0.0
  title: EVO ZWAGGAH
  contact:
    email: azdevteam@microsoft.com
components:
  schemas:
    Round:
      type: object
      required:
        - name
        - template
        - lastDate
        - nameIsMandatory
        - authorizedUsers
        - description
      properties:
        name:
          type: string
        template:
          type: string
        lastDate:
          type: string
          format: date-time
        NameIsMandatory:
          type: string
        authorizedUsers:
          type: array
          items:
            $ref: "#/components/schemas/CoWorker"
        description:
          type: string
    CoWorker:
      type: object
      required:
        - userId
        - userName
        - id
      properties:
        id:
          type: string
          description: The auto-generated id of the coworker
        userId:
          type: string
          description: The ID of the user
        userName:
          type: string
          description: The name of the user
    UserResponse:
      type: object
      properties:
        userName:
          type: string
        answers:
          type: object
          additionalProperties:
            $ref: "#/components/schemas/Answer"
    Answer:
      type: object
      properties:
        score:
          type: number
        motivation:
          type: string
    Template:
      type: object
      required:
        - templateName
        - nameIsMandatory
        - scoreScale
        - mandatoryMotivations
        - categories
        - colorScale
      properties:
        templateName:
          type: string
          description: The name of the template
        nameIsMandatory:
          type: string
          description: Whether the name is mandatory
        scoreScale:
          type: object
          properties:
            start:
              type: number
            end:
              type: number
            descriptions:
              type: array
              items:
                type: object
                properties:
                  score:
                    type: string
                  title:
                    type: string
                  description:
                    type: string
        mandatoryMotivations:
          type: boolean
        categories:
          type: array
          items:
            type: object
            properties:
              categoryName:
                type: string
              questions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    text:
                      type: string
        colorScale:
          type: object
          properties:
            colorName:
              type: string
            hexValues:
              type: array
              items:
                type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /round/edit/{editId}:
    get:
      operationId: GetEditRound
      summary: Gets an Edit round
      tags:
        - Round
      parameters:
        - name: editId
          in: path
          required: true
          description: ID of the edit
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"

  /round/view/{id}:
    get:
      operationId: GetEditRound
      summary: Gets an Edit round
      tags:
        - Round
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the edit
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"

  /round/edit/{id}:
    put:
      summary: Update answers in RoundData
      operationId: UpdateRoundData
      tags:
        - Round
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the edit
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserResponse"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"

  /newfeedbackround/coworkers:
    get:
      summary: Returns the list of all the coworkers
      tags:
        - CoWorkers
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CoWorker"
        "404":
          description: No coworkers found

  /newfeedbackround/templates:
    get:
      summary: Returns the list of all templates
      tags:
        - Templates
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Template"
        "404":
          description: No templates found

  /newfeedbackround/:
    post:
      summary: Create a new feedback round
      operationId: CreateFeedbackRound
      tags:
        - Round
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Round"
      responses:
        "201":
          description: Feedback round created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "500":
          description: Server error

  /rounds:
    get:
      summary: Get rounds for a user
      operationId: GetUserRounds
      tags:
        - Round
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Round"
        "401":
          description: Unauthorized
        "404":
          description: No rounds found
        "500":
          description: Server error
  /newtemplate:
    post:
      summary: Creates a new feedback template
      tags:
        - NewFeedbackTemplate
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Template"
      responses:
        "201":
          description: The feedback template was successfully created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        "400":
          description: Invalid input
        "401":
          description: Unauthorized
        "500":
          description: Server error
